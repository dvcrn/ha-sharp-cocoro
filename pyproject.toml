[project]
name = "ha-sharp-cocoro"
version = "1.2"
description = ""
authors = [{name = "David Mohl", email = "git@d.sh"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "sharp-cocoro @ git+https://github.com/dvcrn/sharp-cocoro.git@main",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["custom_components"]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "homeassistant>=2024.3.3",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "ruff>=0.12.0",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "PL", # pylint
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
]
ignore = [
    "E501", # line too long (handled by black)
    "D203", # one-blank-line-before-class (conflicts with D211)
    "D213", # multi-line-summary-second-line (conflicts with D212)
    "PLR0913", # too many arguments
    "PLR2004", # magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104"] # Missing docstring in public package
"test_*.py" = ["D100", "D101", "D102", "D103"] # Missing docstrings in tests

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["custom_components.sharp_cocoro"]
forced-separate = ["homeassistant"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
follow_imports = "normal"
ignore_missing_imports = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
